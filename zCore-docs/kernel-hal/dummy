这一部分全为weak

为上下提供抽象接口

#[repr(C)]
pub struct Thread {
    id: ThreadId,
}

impl Thread{
    pub fn spawn(
        _future: Pin<Box<dyn Future<Output = ()> + Send + 'static>>,
        _vmtoken: usize,
    ) -> Self

    pub fn set_tid(_tid: u64, _pid: u64)

    pub fn get_tid() -> (u64, u64)
}

pub fn context_run(_context: &mut UserContext)


pub trait PageTableTrait: Sync + Send

/// Page Table
#[repr(C)]
pub struct PageTable
及其impl


#[repr(C)]
pub struct PhysFrame
及其impl


/// Read physical memory from `paddr` to `buf`.
#[linkage = "weak"]
#[export_name = "hal_pmem_read"]
pub fn pmem_read(_paddr: PhysAddr, _buf: &mut [u8])

/// Write physical memory to `paddr` from `buf`.
#[linkage = "weak"]
#[export_name = "hal_pmem_write"]
pub fn pmem_write(_paddr: PhysAddr, _buf: &[u8])

/// Copy content of `src` frame to `target` frame.
#[linkage = "weak"]
#[export_name = "hal_frame_copy"]
pub fn frame_copy(_src: PhysAddr, _target: PhysAddr)

/// Zero `target` frame.
#[linkage = "weak"]
#[export_name = "hal_frame_zero"]
pub fn frame_zero_in_range(_target: PhysAddr, _start: usize, _end: usize)

/// Flush the physical frame.
#[linkage = "weak"]
#[export_name = "hal_frame_flush"]
pub fn frame_flush(_target: PhysAddr)

串口操作

时钟

中断控制

